# Generated by Django 4.1.2 on 2022-10-25 07:05

import uuid

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


def populate_mappings(apps, schema_editor):

    Property = apps.get_model("Stop", "Property")
    SpecialStop = apps.get_model("Stop", "SpecialStop")
    Mapping = apps.get_model("Board", "Mapping")
    ContentType = apps.get_model("contenttypes", "ContentType")

    Properties = Property.objects.all()
    SpecialStops = SpecialStop.objects.all()

    MAPPINGS = [
        "Start",
        "Mumbai",
        "Water Works",
        "Railways",
        "Ahemdabad",
        "Income Tax",
        "Indore",
        "Chance",
        "Jaipur",
        "Jail",
        "Delhi",
        "Chandigarh",
        "Electricity",
        "Bus Company",
        "Shimla",
        "Amritsar",
        "Community Chest",
        "Srinagar",
        "Club",
        "Agra",
        "Chance",
        "Kanpur",
        "Patna",
        "Darjeeling",
        "Airways",
        "Kolkata",
        "Hyderabad",
        "Rest House",
        "Chennai",
        "Community Chest",
        "Bangalore",
        "Wealth Tax",
        "Mysore",
        "Pune",
        "Motor Boat",
        "Goa",
    ]

    mappings = []
    for index, mapping in enumerate(MAPPINGS):
        content_obj = Properties.filter(name=mapping)
        if not content_obj.exists():
            content_obj = SpecialStops.filter(name=mapping)

        mapping_obj = Mapping(
            content_type=ContentType.objects.get_for_model(content_obj[0]),
            object_id=content_obj[0].id,
            place_number=index + 1,
        )
        mapping_obj.full_clean()
        mappings.append(mapping_obj)

    mappings = Mapping.objects.bulk_create(mappings)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("Stop", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Mapping",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "place_number",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(36),
                        ]
                    ),
                ),
                ("object_id", models.UUIDField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("mappings", models.ManyToManyField(to="Board.mapping")),
            ],
        ),
        migrations.RunPython(populate_mappings),
    ]
